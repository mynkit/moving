setcps (140/60/4)

all $ (|+ n (0)).(|* gain 1.2)

do
  resetCyclesTo (-2-0.05)
  let
    bpm = 140
    parkStartCycle = 36
  d10
    $ s "soda" # nTake "sodaN" [0..35] # gain 1
  d11
    $ when (<parkStartCycle) (const $ s "~")
    $ s "park" # nTake "parkN" [1..30] # gain 1
  d1 -- melody
    $ (|+ n (-5))
    $ when (<0) (# gain 0)
    $ when (==0) (while "t f f f f f" (# gain 0))
    $ fast 2
    $ mix ((|+ n 12).(|* gain 0.8))
    $ (# pingpong 0.5)
    -- $ mix ((rev).((5/6) ~>).(|- pan 1).(# lpf 400).(|* gain 0.75))
    -- $ when (>8) (sometimesBy 0.4 (# n "[cs6|e6|fs6] cs5 e5"))
    $ when (>8) (sometimesBy 0.4 (# n "[cs6|e6|fs6|a2|e2] cs5 e5"))
    $ s "SinOscSynthBend*3"
    # n "<a5 b5> cs5 e5"
    # sustain ((*(100/bpm)) <$> "0.7")
    # room 0.6 # size 0.5
    # scReverb 0.3 # ice 0.2
    # gain 0.6
    # pan (range 0 0.1 rand)
    # pingpongt (1/4) # pingpongfb 0.4
    # vibratoFreq 8 # vibratoDepth 0.24
  d2 -- chord
    $ (|+ n (-5))
    $ when (>16) (whenmod 8 4 (|+ n (-2)))
    $ (|* gain 0.39)
    $ stack [
    when (==3) (# gain 1)
    $ s "~ ~ superhammondBend"
    # n "<a4,e4,cs5>"
    # sustainpedal ((*(100/bpm)) <$> "0.75") # slide 1
    # sustain ((*(100/bpm)) <$> "5.69")
    # gain 0
    ,
    when (<6) (# gain 0)
    $ slow 2
    $ s "superhammondBend"
    # n "<a4,e4,cs5>"
    # sustain ((*(100/bpm)) <$> "4.94")
    # gain 1
    ]
    # voice 2
    # hpf 100
    # freeverb 0.8 # size 0.8
  d3 -- light
    $ when ((/=6).(mod' 16)) (|* gain 0)
    $ mix ((|- n 2).(|* gain 0.5))
    $ mix ((|+ n 7).(|* gain 0.4))
    $ mix ((|+ n 12).(|* gain 0.9))
    $ s "~ FastSinSynth ~"
    # sustain 8
    # gain 0.62
    # n "b5"
    # pan 1
    # room 0.8 # size 0.2
  d4 -- bass
    $ "~"
  d5 -- bassdrum
    $ (|* gain 1.1)
    $ when (<4) (|* gain 0)
    $ when (==4) (while "t f" (|* gain 0))
    $ stack[
    s "click/2 ~ ~" # gain 1.6
    ,
    when ((/=1).(mod' 4)) (|* gain 0) $ s "~ ~ click" # gain 1.6
    ,
    when (<12) (|* gain 0) $ when ((==0).(mod' 2)) (|* gain 0) $ s "click" # gain 1.6
    ,
    when ((/=3).(mod' 4)) (|* gain 0) $ s "~ ~ [~ click]" # gain 1.6
    ]
    # speed "0.8 1 0.8 1" # pan 0.5 # lpf 300
  d6 -- railroad
    $ when (<6) (|* gain 0)
    $ when (==6) (|* gain 0.7)
    $ when (==7) (|* gain 0.8)
    $ when (==8) (|* gain 0.9)
    $ when (>=(parkStartCycle+4)) (|* gain 0)
    $ someCyclesBy 0.1 (|* speed (-1))
    $ s "railroad" # n (irand 3)
    # speed 0.94
    # lpf 1000
    # cut 1
    # hpf (range 700 250 (slow 16 $ (cosine)))
    # gain (range 0.5 0.8 (slow 16 $ (cosine)))
    # pan (slow 16 $ cosine)
  d7 -- ding-ding
    $ when (>=(parkStartCycle+4)) (|* gain 0)
    $ when (<4) (|* gain 0)
    $ when ((/=9).(mod' 16)) (|* gain 0)
    $ s "ding*4" # gain 0.55 # cut 1 # pan 0.3 # lpf 800 # up (2)
  d8 -- lighter
    $ when (<8) (|* gain 0)
    $ (0.25 ~>)
    $ when (==(parkStartCycle+2)) (const $ s "lighter lighter ~" # gain 1.4 # pan "0 0.95 1" # lpf 5000 # cut 1)
    $ someCyclesBy 0.2 ((# speed (-1)).(|- pan 1))
    $ s "lighter/16" # gain 1.25 # pan (range 0.1 0.3 rand) # lpf 5000

once
  $ (|- n 5)
  $ (|* gain 1.2)
  $ stack [
    mix ((|+ n 12).(|* gain 0.7))
    $ s "zure" # sustain 15 # n "<e4,b4,g4,d4>"
    # gain 0.5
    # real 0.4 # imag 0
    ,
    mix ((|+ n 12).(|* gain 0.5))
    $ s "SinOscSynthBend" # sustain 18 # n "<a2>"
    # gain 0.4
  ]
  # room 0.8 # size 0.9 # scReverb 0.9 # freeverb 0.9
  # pan rand
  -- # pan (choose [0,0.1,0.3,0.9,1])
  -- # pan 0.9
